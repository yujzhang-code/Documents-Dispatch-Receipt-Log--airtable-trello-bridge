name: Airtable → Trello (field IDs, checkbox + writeback date)

on:
  # leave manual trigger for now; later you can add a schedule
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Get Airtable records and create Trello cards
        env:
          # Airtable
          AIRTABLE_TOKEN:        ${{ secrets.AIRTABLE_TOKEN }}
          AIRTABLE_BASE_ID:      ${{ secrets.AIRTABLE_BASE_ID }}
          AIRTABLE_TABLE_ID:     ${{ secrets.AIRTABLE_TABLE_ID }}   # e.g. tblXXXXX…
          AIRTABLE_FID_CHECKED:  ${{ secrets.AIRTABLE_FID_CHECKED }} # checkbox 欄位 ID（要打勾才建立）
          AIRTABLE_FID_URL:      ${{ secrets.AIRTABLE_FID_URL }}     # 回寫 Trello 卡片 URL 的欄位 ID
          AIRTABLE_FID_DATE:     ${{ secrets.AIRTABLE_FID_DATE }}    # 回寫建立日期的欄位 ID
          AIRTABLE_FID_SUBJECT:  ${{ secrets.AIRTABLE_FID_SUBJECT }} # 主旨欄位 ID（讀取）
          AIRTABLE_FID_DOCNO:    ${{ secrets.AIRTABLE_FID_DOCNO }}   # 公文文號欄位 ID（讀取）

          # Trello
          TRELLO_KEY:            ${{ secrets.TRELLO_KEY }}
          TRELLO_TOKEN:          ${{ secrets.TRELLO_TOKEN }}
          TRELLO_LIST_ID:        ${{ secrets.TRELLO_LIST_ID }}       # 要建卡的 List

        run: |
          set -euo pipefail

          # 1) 讀取 Airtable（用欄位 ID 回傳，避免名字有中英文/空白問題）
          API="https://api.airtable.com/v0/${AIRTABLE_BASE_ID}/${AIRTABLE_TABLE_ID}"
          URL="${API}?returnFieldsByFieldId=true&maxRecords=50"
          RESP="$(curl -sS -H "Authorization: Bearer ${AIRTABLE_TOKEN}" "$URL")"

          # 2) 只挑「checkbox 勾選」且「URL 欄位為空」的資料
          echo "$RESP" \
          | jq -c --arg cb  "$AIRTABLE_FID_CHECKED" \
                 --arg url "$AIRTABLE_FID_URL" \
                 --arg s   "$AIRTABLE_FID_SUBJECT" \
                 --arg d   "$AIRTABLE_FID_DOCNO" '
              .records[]
              | select((.fields[$cb] == true) and (.fields[$url] == null))
              | {id, subject: .fields[$s], docno: .fields[$d]}
            ' \
          | while read -r ROW; do
              ID=$(jq -r '.id'            <<< "$ROW")
              SUBJECT=$(jq -r '.subject // ""' <<< "$ROW")
              DOCNO=$(jq -r '.docno   // ""' <<< "$ROW")

              NAME="${DOCNO} — ${SUBJECT}"
              DESC="Auto-created from Airtable record: ${ID}"

              echo "Creating Trello card for record ${ID} …"

              # 3) 建 Trello 卡
              CARD_JSON="$(curl -sS -X POST \
                "https://api.trello.com/1/cards?idList=${TRELLO_LIST_ID}&key=${TRELLO_KEY}&token=${TRELLO_TOKEN}" \
                --data-urlencode "name=${NAME}" \
                --data-urlencode "desc=${DESC}")"

              CARD_URL="$(jq -r '.shortUrl' <<< "$CARD_JSON")"
              if [ -z "$CARD_URL" ] || [ "$CARD_URL" = "null" ]; then
                echo "!! Trello card creation failed for record ${ID}"
                echo "$CARD_JSON"
                continue
              fi
              echo "  Trello: $CARD_URL"

              # 4) 回寫 Airtable：卡片 URL + 建立日期（UTC ISO 8601）
              NOW="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
              PATCH="$(jq -n \
                --arg id   "$ID" \
                --arg urlf "$AIRTABLE_FID_URL" \
                --arg dtf  "$AIRTABLE_FID_DATE" \
                --arg url  "$CARD_URL" \
                --arg dt   "$NOW" \
                '{records:[{id:$id, fields:{($urlf):$url, ($dtf):$dt}}]}')"

              curl -sS -X PATCH "${API}?returnFieldsByFieldId=true" \
                -H "Authorization: Bearer ${AIRTABLE_TOKEN}" \
                -H "Content-Type: application/json" \
                --data "$PATCH" > /dev/null

              echo "  Wrote back to Airtable ✓"
            done

